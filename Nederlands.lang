# VERTAALD DOOR TEPOLOCO

# version(1)
# Welcome to Clearlag's language file! Here you can modify the various strings ClearLag uses to suit your language, or preference
# -- NOTE: This is the format: '<key>({replaceables}...):<message>'
# -- NOTE: The replaceables are replaced depending on order, not the actual key name. So you may customize the key names too!
# -- NOTE: The { ... } symbols represent a message block. This is applicable anywhere you want... Do not include any characters with {, or }

####----> Commands -->
command.error.wrongUsage({usage},{name})=&cVerkeerd gebruik: &8/&7lagg {name} {usage}
command.error.noPermission({name})=&cU heeft geen toestemming om het commando &8/&7lagg {name} te gebruiken
command.error.onlyForPlayer()=&cDit commando kun je alleen uitvoeren als speler!

##]-> /lagg
command.lagg.nopermission()=&cU heeft geen toestemming om dit uit te voeren!
command.lagg.header()=&3-------------(&b&lJouw Clearlag Commands&3)-------------
command.lagg.footer()=&3----------------------------------------------------
command.lagg.helpline({name},{desc})= &4- &8/&3lagg &b{name} &f -  {desc}

##]-> /lagg admin
command.admin.name()=admin
command.admin.desc()=(Beheer de modules van Clearlag)
command.admin.usage()=
command.admin.enabledModules({moduleList})=&aIngeschakelde Herlaadbare modules: &7{moduleList}
command.admin.noReloadableFields({module})={module} &cbevat geen herlaadbare velden!
command.admin.notEnabled({module})=&cDeze module is niet ingeschakeld!
command.admin.reload({module})=&aModule {module} is succesvol herladen!
command.admin.failedReload({module})=&cDe {module} module kan niet opnieuw worden geladen
command.admin.invalidModule({argument})=&cOngeldige module: {argument}
command.admin.enabledModules({modules})=&aIngeschakelde modules: &7{modules}
command.admin.stoppedModule({module})=&aModule {module} is &cgestopped&a!
command.admin.startableModules({modules})=&aStartbare modules: &7{modules}
command.admin.alreadyEnabled({module})=&cDeze module is al ingeschakeld!
command.admin.enabled({module})=&aModule {module} is nu ingeschakeld!
command.admin.moduleStatus({listeners},{commands},{tasks},{modules})={
&3=--------------[&6-&3] &b&lModule Status &3[&6-&3]----------------=
              &8[&7Gray = Uitgeschakeld&8]   &8[&aGreen = Ingeschakeld&8]
&6Listeners: {commands}
&6Commands: {commands}
&6Tasks: {tasks}
&6Modules: {modules}
}
command.admin.help()={
&3=-------------[&6-&3] &b&lModule Commands &3[&6-&3]---------------=
&4  - &3/lagg admin &creload &b<module>
&4  - &3/lagg admin &cstop &b<module>
&4  - &3/lagg admin &cstart &b<module>
&4  - &3/lagg admin &clist
&3-----------------------------------------------------
}

##]-> /lagg area
command.area.name()=area
command.area.usage()=<radius>
command.area.desc()=(Wist entiteiten uit uw regio)
command.area.error({arg})=&4Ongeldig argument opgegeven&8: &c{arg}
command.area.message({removed},{radius})=&6[&aClearLag&6] &3{removed} &bEntiteiten zijn verwijderd binnen een regio van &3{radius}&b!

##]-> /lagg checkchunk
command.checkchunk.name()=checkchunk
command.checkchunk.usage()=
command.checkchunk.desc()=(Geeft de entiteiten van chunks weer)
command.checkchunk.header()=&4*&3&m                            &8(&a&lChunk Informatie&8)&3&m                              &4*
command.checkchunk.tilelist()=&3 Entiteiten op de grond&8:
command.checkchunk.entitylist()=&3 Entiteiten&8:
command.checkchunk.line({count},{type})=   &8- &ax{count} &7{type}
command.checkchunk.footer()=&4*&3&m                                                                             &4*

##]-> /lagg check
command.check.name()=check
command.check.usage()=[world1, world2...]
command.check.desc()=(Telt entiteiten in uw wereld(en))
command.check.invalidworld({arg})=&4Ongeldige wereld opgegeven&8: {arg}
command.check.header()=&4*&3&m                          &8(&a&lServer Status&8)&3&m                           &4*
command.check.printed({removed1},{mobs},{animals},{players},{chunks},{activehoppers},{inactivehoppers},{spawners},{uptime},{tps},{usedmemory},{maxmemory},{freememory})={
&3   Spullen op de grond: &b{removed1}
&3   Mobs in leven: &b{mobs}
&3   Vriendelijke mob in leven: &b{animals}
&3   Spelers in leven: &b{players}
&3   Chunks geladen: &b{chunks}
&3   Actieve hoppers: &b{activehoppers}
&3   Inactieve hoppers: &b{inactivehoppers}
&3   Actieve mob spawners: &b{spawners}
&3   Uptime: &b{uptime}
&3   Huidige TPS: &b{tps}
&3   RAM Gebruik: &b{usedmemory}&7/&b{maxmemory} &7MB
&3   Vrij geheugen: &b{freememory} &7MB
}
command.check.footer()=&4*&3&m                                                                             &4*

##]-> /lagg chunk
command.chunk.name()=chunk
command.chunk.usage()=[list-size]
command.chunk.desc()=(Vindt laggy chunks)
command.chunk.header()=&7&m                           &7( &bGrootste Chunks &7)&m                           "
command.chunk.print({order},{world},{x},{z},{count})=&4{order}&7) &3Wereld: &b{world}  &3x: &b{x}  &3z: &b{z}  &3Entiteiten: &b{count}

##]-> /lagg clear
command.clear.name()=clear
command.clear.usage()=
command.clear.desc()=(Wist entiteiten uit uw werelden)
command.clear.message({count})=&6[&aClearLag&6] &a&bJe bent zojuist &3{count} &bentiteiten verwijderd!

##]-> /lagg gc
command.gc.name()=gc
command.gc.usage()=
command.gc.desc()=(Verzoek garbage collecter)
command.gc.message()=&6[&aClearLag&6] &a&bDirecte garbage collection aanvragen! & 7 (Waarschuwing: Java's VM maakt automatisch efficiÃ«nt geheugen vrij. Gebruik deze opdracht alleen om fouten op te sporen)

##]-> /lagg halt
command.halt.name()=halt
command.halt.usage()=[on/off]
command.halt.desc()=(Stopt de meeste serveractiviteit)
command.halt.halted()=&6[&aClearLag&6] &a&bDe serveractiviteit is &cgestopt&b!
command.halt.unhalted()=&6[&aClearLag&6] &a&aDe serveractiviteit wordt niet langer gestopt!

##]-> /lagg killmobs
command.killmobs.name()=killmobs
command.killmobs.usage()=
command.killmobs.desc()=(Wist mobs uit jouw werelden)
command.killmobs.message({count})=&6[&aClearLag&6] &a&3{count} &bMobs verwijderd!

##]-> /lagg profile
command.profile.name()=profile
command.profile.usage()=<sample-seconds> <sample-type>
command.profile.desc()=(Profielvertragingen die gebeurtenissen veroorzaken)
command.profile.invalidtime({arg})=&4Ongeldige tijd opgegeven&8: &c{arg}
command.profile.invalidprofiler({arg},{profilers})={
&4Ongeldige profiler opgegeven&8: &c{arg}
&cGeldige Profilers&8: &7{profilers}
}
command.profile.nosamples()=&cEr zijn geen monsters geregistreerd tijdens de monstertijd
command.profile.header()=&7&m                           &7( &bChunk Monsters &7)&m
command.profile.line({listing},{world},{x},{z},{samples})=&4{listing}&7) &3Wereld: &b{world}&7, &3x: &b{x}&7, &3z: &b{z}   &3Monster groote: &b{samples}
command.profile.started({time})=&6[&aClearLag&6] &aProfiler begon, loopt voor &7{time} &aseconden

##]-> /lagg reload
command.reload.name()=reload
command.reload.usage()=
command.reload.desc()=(Reload clearlag)
command.reload.begin()=&6[&aClearLag&6] &bEr wordt geprobeerd modules opnieuw te laden...
command.reload.successful()=&6[&aClearLag&6] &bModules zijn opnieuw geladen!

##]-> /lagg samplememory
command.samplememory.name()=samplememory
command.samplememory.usage()=<sample-seconds>
command.samplememory.desc()=(Sample memory/GC usage)
command.samplememory.invalidinteger({arg})=&4Ongeldig getal opgegeven&8: &c{arg}
command.samplememory.begin({time})=&aGeheugen sampler uitvoeren voor &7{time} &aseconden
command.samplememory.header()=&4*&3&m                       &8(&a&lGeheugen Tick statistieken&8)&3&m                        &4*
command.samplememory.memory({high},{average})={
&aMemory (In MB):
&3   Hoogste geheugengebruik per tik: &b{high}
&3   Gemiddeld geheugengebruik per tik: &b{average}
}
command.samplememory.gc({total},{highest},{lowest},{averagetime},{averageticks})={
&aGarbage Collector (gebaseerd op ticks, in milliseconden):
&3   Totaal aantal GC collecties (Per tick): &b{total}
&3   Hoogste Garbage Collector tijd: &b{highest}
&3   Laagste Garbage Collector tijd: &b{lowest}
&3   Gemiddelde Garbage Collector tijd: &b{averagetime}
&3   Gemiddelde ticks tussen collecties: &b{averageticks}
}
command.samplememory.notenoughtime()=&cNiet genoeg tijd voor resultaten van garbage collector

##]-> /lagg sampleticks
command.sampleticks.name()=sampleticks
command.sampleticks.usage()=[ticksToSample] [raw/stats]
command.sampleticks.desc()=(Test ticks van uw server)
command.sampleticks.start({threadname},{time})=&aBegonnen met volledige test op thread &7{threadname} &avoor &7{time} &aticks &7 (schatting, niet 100% exact)
command.sampleticks.rawheader()=&cGeschatte tick-tijden: &7(Normale tick is tussen 0-50ms in de tijd)
command.sampleticks.rawprint({time})=&8 - {time}
command.sampleticks.print({large},{small},{average},{spikes})={
&aTick-statistieken: &7(Normale tick is tussen 0-50ms in de tijd)
&3   Grooste-tick: {large}
&3   Kleinste-tick: {small}
&3   Gemiddelde-tick: {average}
&3   Stekels: {spikes}
}

##]-> /lagg tpchunk
command.tpchunk.name()=tpchunk
command.tpchunk.usage()=<x> <z> [world]
command.tpchunk.desc()=(Teleporteer naar chunks)
command.tpchunk.begin()=&6[&aClearLag&6] &bEr wordt geprobeer om de modules opniew te laden...
command.tpchunk.successful()=&6[&aClearLag&6] &bModules zijn opniew geladen!
command.tpchunk.invalidinteger({arg})=&4Ongeldig geta&8: &c{arg}
command.tpchunk.invalidworld({arg})=&4Wereld bestaat niet&8: &c{arg}
command.tpchunk.teleported({x},{z})=&6[&aClearLag&6] &bGeteleporteerd naar chunk: &3{x}&7, &3{z}

##]-> /lagg tps
command.tps.name()=tps
command.tps.usage()=
command.tps.desc()=(Geef het gemiddelde tick rate van de server)
command.tps.print({tps})=&6[&aClearLag&6] &a{tps}

##]-> /lagg unloadchunks
command.unloadchunks.name()=unloadchunks
command.unloadchunks.usage()=
command.unloadchunks.desc()=(Verwijder ongeladen chunks)
command.unloadchunks.print({chunks})=&6[&aClearLag&6] &3{chunks} &bchunks zijn verwijderd!

##]-> /lagg memory
command.memory.name()=memory
command.memory.usage()=[tick-rate]
command.memory.desc()=(Bekijk Heap informatie)
command.memory.message()=&3JVM-heap-sampling gestart op de vermelde geheugenpools
command.memory.invalidinteger({arg})=&4Invalid poll-rate specified&8: &c{arg}

##]-> /lagg performance
command.performance.name()=performance
command.performance.usage()=[tick-rate]
command.performance.desc()=(View Server Performance)
command.performance.message()=&3Started thread sampling (More &1sleep&3 is better!)
command.performance.invalidinteger({arg})=&4Invalid poll-rate specified&8: &c{arg}
